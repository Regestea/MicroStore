version: '3.4'

services:

  catalogdb:
    image: mongo

  catalogbranddb:
    image: mongo

  catalogcategorydb:
    image: mongo

  catalogcommentdb:
    image: mongo

  useraccountdb:
    image: postgres

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  catalogbrand.api:
    image: ${DOCKER_REGISTRY-}catalogbrandapi
    build:
      context: .
      dockerfile: Services/CatalogBrand/CatalogBrand.API/Dockerfile


  catalogcategory.api:
    image: ${DOCKER_REGISTRY-}catalogcategoryapi
    build:
      context: .
      dockerfile: Services/CatalogCategory/CatalogCategory.API/Dockerfile


  catalogcomment.api:
    image: ${DOCKER_REGISTRY-}catalogcommentapi
    build:
      context: .
      dockerfile: Services/CatalogComment/CatalogComment.API/Dockerfile


  catalog.grpc:
    image: ${DOCKER_REGISTRY-}cataloggrpc
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.GRPC/Dockerfile


  useraccount.api:
    image: ${DOCKER_REGISTRY-}useraccountapi
    build:
      context: .
      dockerfile: Services/UserAccount/UserAccount.API/Dockerfile


  useraccount.grpc:
    image: ${DOCKER_REGISTRY-}useraccountgrpc
    build:
      context: .
      dockerfile: Services/UserAccount/UserAccount.GRPC/Dockerfile


  aws.api:
    image: ${DOCKER_REGISTRY-}awsapi
    build:
      context: .
      dockerfile: Services/AWS/AWS.API/Dockerfile


  catalogcategory.grpc:
    image: ${DOCKER_REGISTRY-}catalogcategorygrpc
    build:
      context: .
      dockerfile: Services/CatalogCategory/CatalogCategory.GRPC/Dockerfile


  aws.grpc:
    image: ${DOCKER_REGISTRY-}awsgrpc
    build:
      context: .
      dockerfile: Services/AWS/AWS.GRPC/Dockerfile


  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile

